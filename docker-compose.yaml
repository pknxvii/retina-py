services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"  # HTTP API + Dashboard
      - "6334:6334"  # gRPC API
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      QDRANT__SERVICE__HTTP_PORT: 6333
      QDRANT__SERVICE__GRPC_PORT: 6334
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "dashboard.url=http://localhost:6333/dashboard"

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "dashboard.url=http://localhost:11434"

  # api:
  #   build: .
  #   ports:
  #     - "8000:8000"
  #   environment:
  #     - REDIS_URL=redis://redis:6379/0
  #   depends_on:
  #     - redis
  #   restart: unless-stopped
  #   command: uvicorn main:app --host 0.0.0.0 --port 8000 --workers 4
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  # celery_worker:
  #   build: .
  #   environment:
  #     - REDIS_URL=redis://redis:6379/0
  #   depends_on:
  #     - redis
  #   restart: unless-stopped
  #   command: celery -A app.workers.ingestion_tasks.celery_app worker --loglevel=info --concurrency=4
  #   healthcheck:
  #     test: ["CMD", "celery", "-A", "app.workers.ingestion_tasks.celery_app", "inspect", "ping"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  # celery_flower:
  #   build: .
  #   ports:
  #     - "5555:5555"
  #   environment:
  #     - REDIS_URL=redis://redis:6379/0
  #   depends_on:
  #     - redis
  #   restart: unless-stopped
  #   command: celery -A app.workers.ingestion_tasks.celery_app flower --port=5555
  #   profiles: ["monitoring"]

volumes:
  redis_data:
  minio_data:
  qdrant_data:
  ollama_data:
